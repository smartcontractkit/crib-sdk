apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: chainlink-node
    app.kubernetes.io/name: chainlink
  name: chainlink-node
  namespace: chainlink-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: chainlink-node
      app.kubernetes.io/name: chainlink
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: chainlink-node
        app.kubernetes.io/name: chainlink
    spec:
      containers:
        - args:
            - -c
            - /chainlink/config/config.toml
            - -c
            - /chainlink/config/features.toml
            - -c
            - /chainlink/config/monitoring.toml
            - -s
            - /chainlink/secrets/secrets.toml
            - -s
            - /chainlink/secrets/api-secrets.toml
            - node
            - start
            - -a
            - /chainlink/secrets/apicredentials
          command:
            - chainlink
          env:
            - name: FEATURE_OFFCHAIN_REPORTING
              value: "true"
            - name: LOG_LEVEL
              value: debug
          image: chainlink/chainlink:2.8.0
          imagePullPolicy: Always
          name: chainlink
          ports:
            - containerPort: 6688
              name: api
              protocol: TCP
            - containerPort: 5001
              name: p2pv2
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /chainlink/config
              name: config
              readOnly: true
            - mountPath: /chainlink/secrets
              name: secrets
              readOnly: true
      initContainers:
        - args:
            - "set -e\necho \"Waiting for database to be ready...\"\n\n# Extract database URL from secrets.toml\nDB_URL=$(grep -A 10 '\\[Database\\]' /chainlink/secrets/secrets.toml | grep 'URL' | sed 's/.*URL = \"\\([^\"]*\\)\".*/\\1/')\n\nif [ -z \"$DB_URL\" ]; then\n\techo \"Error: Could not extract database URL from secrets.toml\"\n\texit 1\nfi\n\necho \"Database URL extracted: $DB_URL\"\n\n# Wait for database to be ready\nuntil pg_isready -d \"$DB_URL\"; do\n\techo \"Database is not ready. Waiting 2 seconds...\"\n\tsleep 2\ndone\n\necho \"Database is ready!\""
          command:
            - /bin/bash
            - -c
          image: docker.io/bitnami/postgresql@sha256:6bea1699d088605204841b889fb79d7572030a36ec5731e736d73cd33018cc03
          imagePullPolicy: IfNotPresent
          name: wait-for-db
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /chainlink/secrets
              name: secrets
              readOnly: true
      volumes:
        - configMap:
            name: chainlink-node-config
          name: config
        - name: secrets
          secret:
            secretName: chainlink-node-file

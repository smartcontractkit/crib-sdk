---
name: "PR â†’ main: CI Tests and Linting"

on:
  merge_group:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

jobs:
  ci-test-go:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure env for toolchain ignore
        shell: bash
        run: echo "GOTOOLCHAIN=local" >> "$GITHUB_ENV"

      - name: Setup golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Set env vars
        run: |
          gomodcache="$(go env GOMODCACHE)"
          gocache="$(go env GOCACHE)"
          goroot="$(go env GOROOT)"

          {
            echo "GOMODCACHE=${gomodcache}"
            echo "GOCACHE=${gocache}"
            echo "GOROOT=${goroot}"
          } >> "$GITHUB_ENV"

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.GOMODCACHE }}
            ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', '**/go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup asdf
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302 # v4.0.0

      - name: Setup task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate code
        run: go generate ./...

      - name: Run Go Tests
        run: task go:test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  ci-lint-go:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: read
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure env for toolchain ignore
        shell: bash
        run: echo "GOTOOLCHAIN=local" >> "$GITHUB_ENV"

      - name: Setup golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Set env vars
        run: |
          gomodcache="$(go env GOMODCACHE)"
          gocache="$(go env GOCACHE)"
          goroot="$(go env GOROOT)"

          {
            echo "GOMODCACHE=${gomodcache}"
            echo "GOCACHE=${gocache}"
            echo "GOROOT=${goroot}"
          } >> "$GITHUB_ENV"

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.GOMODCACHE }}
            ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', '**/go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup asdf
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302 # v4.0.0

      - name: Setup task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate code
        run: go generate ./...

      - name: Run golangci-lint
        run: task go:lint

  gen-coverage-report:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Set env vars
        run: |
          gomodcache="$(go env GOMODCACHE)"
          gocache="$(go env GOCACHE)"
          goroot="$(go env GOROOT)"

          {
            echo "GOMODCACHE=${gomodcache}"
            echo "GOCACHE=${gocache}"
            echo "GOROOT=${goroot}"
          } >> "$GITHUB_ENV"

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.GOMODCACHE }}
            ${{ env.GOCACHE }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', '**/go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: generate test coverage
        run: go test -fullpath -mod=readonly -count 1 -shuffle=on -coverprofile=./coverage.txt -covermode=atomic -coverpkg=./... ./...

      - name: check test coverage
        uses: vladopajic/go-test-coverage@d4177aaab9307eb783516275d495c01254da2fb9 # v2.16.0
        with:
          config: ./.testcoverage.yaml
